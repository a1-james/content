[MODEL: dataset="trend_micro_vision_raw"]
filter
    event_type in ("workbench")
| alter
    xdm.source.cloud.project = id
    xdm.event.outcome_reason = investigationStatus
    xdm.network.http.url = workbenchLink
    xdm.source.application.name = alertProvider
    xdm.event.original_event_type = model
    xdm.alert.severity = score
    xdm.event.log_level = severity
    xdm.alert.description = items
    Entities = json_extract_array(impactScope, "$.entities)
    | alter
    # TODO - handle items.impactScope.entities.entityType
    xdm.source.user.username = arraystring(arraymap(Entities, json_extract_scalar("@element", "$.entityValue")), ","), # TODO - there is a problem here, sometimes it returns dict, and sometimes string
    # TODO - handle items.impactScope.entities.entityId
    xdm.target.resource.id = arraystring(arraymap(Entities, json_extract_scalar("@element", "$.relatedEntites")), ","),
filter
    event type in ("audit")
| alter
    xdm.source.user.username = loggedUser
    xdm.source.user.groups = loggedRole
    xdm.source.zone = accessType
    xdm.event.type = category
    xdm.event.operation_sub_type = activity
    xdm.event.outcome_reason = result
    xdm.event.description = details  # TODO - looks like details structure is changing for each audit log, need to check
filter
    event type in ("search_detections")
| alter
    xdm.event.outcome_reason = act  # TODO - array of strings
    xdm.observer.action = actResult
    xdm.network.application_protocol = app
    xdm.alert.original_threat_name = behaviorCat
    xdm.event.original_event_type = blocking
    xdm.alert.severity = cat
    xdm.source.agent.version = component  # TODO - array of strings
    xdm.observer.unique_identifier = deviceGUID
    xdm.source.process.name = coalesce(deviceProcessName, processName)
    xdm.source.host.mac_addresses = coalesce(deviceMacAddress, endpointMacAddress, interestedMacAddress)
    xdm.target.host.hostname = dhost
    xdm.source.user.domain = domainName
    xdm.target.port = dpt
    xdm.target.ipv4 = dst  # TODO - array of strings
    xdm.source.host.device_id = endpointGUID
    xdm.source.host.hostname = coalesce(endpointHostName, hostName)
    xdm.source.host.ipv4_addresses = endpointIp  # TODO - array of strings
    xdm.event.id = eventId
    xdm.event.type = eventName
    xdm.event.operation_sub_type = eventSubName
    xdm.source.process.executable.filename = fileName  # TODO - array of strings
    xdm.source.process.executable.path = filePath
    xdm.target.file.size = fileSize
    xdm.network.http.referrer = httpReferer
    xdm.alert.subcategory = malType
    xdm.source.ipv6 = mDevice  # TODO - need to use if with regex if its ipv4 / ipv6, the mDevice field is an array of strings
    xdm.source.ipv4 = mDevice  # TODO - need to use if with regex if its ipv4 / ipv6, the mDevice field is an array of strings
    xdm.source.ipv4 = src   # TODO - need to use if with regex if its ipv4 / ipv6, the mDevice field is an array of strings
    xdm.alert.mitre_tactics = mitreMapping  # TODO - array of strings
    xdm.observer.type = mpname
    xdm.observer.version = mpver
    xdm.source.process.command_line = coalesce(objectCmd, processCmd)  # TODO - objectCmd = array of strings, processCmd = single string
    xdm.source.process.executable.md5 = coalesce(objectFileHashMd5, objectFileHashSha256)
    xdm.source.process.executable.sha256 = coalesce(objectFileHashSha256, objectFileHashMd5)
    xdm.target.module.filename = coalesce(objectFileName, objectName)
    xdm.target.module.path = objectFilePath
    xdm.target.module.signer = objectSigner  # TODO - array of strings
    xdm.observer.content_version = pname
    xdm.intermediate.process.executable.path = processFilePath
    xdm.source.process.pid = processPid
    xdm.source.process.executable.signer = processSigner
    xdm.observer.product = pver
    xdm.network.http.url = request
    xdm.source.user_agent = requestClientApplication
    xdm.source.port = spt
    xdm.alert.name = threatName
    xdm.alert.original_alert_id = uuid

    xdm.event.log_level=if(logLevel in ("info","notice","err","debug","alert","warning","crit","critcal","emerg","emergancy"), logLevel, null),
    | alter ipv4src = if(src ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", src, null)
    | alter ipv6src = if(src != null and ipv4src = null, src, null)