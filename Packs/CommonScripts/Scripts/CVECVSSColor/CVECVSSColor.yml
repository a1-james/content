commonfields:
  id: cvss_color
  version: -1
name: cvss_color
comment: This dynamic automation parses the CVSS score of a CVE and presents it in the layout in color according to its score.
script: |+
  import json

  colors = {
      'Green1': '#50C878',
      'Green2': '#6CB65B',
      'Green3': '#89C35B',
      'Green4': '#A3C157',
      'Amber1': '#FFB347',
      'Amber2': '#FFA07A',
      'Amber3': '#FF7F50',
      'Red1': '#FF6347',
      'Red2': '#FF4500',
      'Red3': '#FF4040'
  }


  theme = demisto.callingContext['context']['User']['theme']
  indicator = demisto.callingContext['args']['indicator']

  try:
      cvss = indicator.get('CustomFields').get('cvss', '')
      cvss = json.loads(cvss)
      cvss = float(cvss['Score'])


  except (ValueError, AttributeError, KeyError):
      cvss = 0

  if not 0 < cvss <= 10:
      color = "#000000"
      cvss = ""
  elif cvss <= 4:
          color = colors[f"Green{int(cvss)}"]
  elif cvss <= 7:
          color = colors[f"Amber{int(cvss)-4}"]
  else:
          color = colors[f"Red{int(cvss)-7}"]

  return_results(CommandResults(readable_output = f"# <-:->{{{{color:{color}}}}}(**{cvss}**)"))


type: python
tags:
- dynamic-indicator-section
enabled: true
scripttarget: 0
subtype: python3
runonce: false
dockerimage: demisto/python3:3.10.11.57293
runas: DBotWeakRole
fromversion: 6.0.0
tests:
- No tests (auto formatted)
